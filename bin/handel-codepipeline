#!/usr/bin/env node
const AWS = require('aws-sdk');
AWS.config.update({region: 'us-west-2'}); //TODO - Generalize this to all regions later
const codepipeline = require('../lib/codepipeline');
const codebuild = require('../lib/codebuild');
const input = require('../lib/input');
const winston = require('winston');

function getPipelineNamesFromHandelCodePipelineFile(handelCodePipelineFile) {
    let pipelineNames = [];
    for(let pipelineName in handelCodePipelineFile.pipelines) {
        pipelineNames.push(pipelineName);
    }
    return pipelineNames;
}

winston.info("Welcome to the Handel CodePipeline setup wizard");
input.getConfigFiles()
    .then(handelConfigs => {
        let handelFile = handelConfigs.handel;
        let handelCodePipelineFile = handelConfigs.handelCodePipeline;
        let githubAccessToken = handelConfigs.githubAccessToken;
        let pipelineNames = getPipelineNamesFromHandelCodePipelineFile(handelCodePipelineFile);
        return input.getAccountIdsFromPipelineNames(pipelineNames)
            .then(pipelinesToAccountsMapping => {
                let accountConfigs = input.getAccountConfigs(handelConfigs.accountConfigsPath, pipelinesToAccountsMapping);
                return codebuild.createCodeBuildProjects(pipelinesToAccountsMapping, handelCodePipelineFile, handelFile, accountConfigs)
                    .then(createdProjects => {
                        return codepipeline.createPipelines(pipelinesToAccountsMapping, handelCodePipelineFile, handelFile, accountConfigs, githubAccessToken)
                    })
                    .then(createdPipelines => {
                        for(let accountId in createdPipelines) {
                            winston.info(`Finished creating pipelines in ${accountId}`);
                        }
                    });
            });
    })
    .catch(err => {
        winston.error(`Error setting up Handel CodePipeline: ${err}`);
        winston.error(err); 
    });
