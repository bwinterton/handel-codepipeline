---
AWSTemplateFormatVersion: '2010-09-09'
Description: Handel Worker Cluster
Parameters:
  MinInstances:
    Description: Minimum number of instances in the cluster
    Type: Number
    Default: 1
  MaxInstances:
    Description: Maximum number of instances in the cluster
    Type: Number
    Default: 1
  InstanceType:
    Description: The type of ec2 instances to use in the cluster
    Type: String
    AllowedValues:
    - t2.nano
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m3.medium
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    ConstraintDescription: Must be a valid EC2 instance type
    Default: t2.micro
  KeyName:
    Description: The ssh key to assign to the nodes in the cluster.
    Type: AWS::EC2::KeyPair::KeyName
  AmiImageId:
    Description: The AMI to use
    Type: String
  AsgSubnetIds:
    Description: The list of subnet ids to deploy the cluster in
    Type: CommaDelimitedList
  AlbSubnets:
    Description: The list of subnet ids to deploy the cluster in
    Type: CommaDelimitedList
  VpcId:
    Description: The ID of the VPC in which you are running
    Type: String
  UserData:
    Description: The Base64 encoded user UserData
    Type: String
  Ec2SecurityGroup:
    Description: The ID of the Ec2 security group
    Type: String
Resources:
  Ec2IamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AdministratorAccess
  Ec2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
      - Ref: Ec2IamRole

  Ec2LaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: false
      IamInstanceProfile:
        Ref: Ec2InstanceProfile
      ImageId:
        Ref: AmiImageId
      InstanceMonitoring: false
      InstanceType:
        Ref: InstanceType
      SecurityGroups:
      - Ref: Ec2SecurityGroup
      UserData: !Ref UserData
      KeyName:
        Ref: KeyName
  Ec2AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      Cooldown: 300
      DesiredCapacity:
        Ref: MinInstances
      HealthCheckGracePeriod: 300
      HealthCheckType: EC2
      LaunchConfigurationName:
        Ref: Ec2LaunchConfiguration
      MaxSize:
        Ref: MaxInstances
      MinSize:
        Ref: MinInstances
      VPCZoneIdentifier:
        Ref: AsgSubnetIds
  Alb:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    DependsOn: AlbSecurityGroup
    Properties:
      Name: handel-codepipeline-worker
      Scheme: internet-facing
      LoadBalancerAttributes:
      - Key: idle_timeout.timeout_seconds
        Value: '30'
      Subnets:
        Ref: AlbSubnets
      SecurityGroups:
      - Ref: AlbSecurityGroup
  AlbSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for ALB
      VpcId:
        Ref: VpcId
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0
  Ec2IngressFromAlb:
    Type: AWS::EC2::SecurityGroupIngress
    DependsOn: AlbSecurityGroup
    Properties:
      GroupId:
        Ref: Ec2SecurityGroup
      IpProtocol: tcp
      FromPort: '0'
      ToPort: '65535'
      SourceSecurityGroupId:
        Ref: AlbSecurityGroup
  AlbListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    DependsOn:
    - AlbTargetGroup
    - Alb
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          Ref: AlbTargetGroup
      LoadBalancerArn:
        Ref: Alb
      Port: '80'
      Protocol: HTTP
  AlbListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    DependsOn:
    - AlbListener
    - AlbTargetGroup
    Properties:
      Actions:
      - Type: forward
        TargetGroupArn:
          Ref: AlbTargetGroup
      Conditions:
      - Field: path-pattern
        Values:
        - "/"
      ListenerArn:
        Ref: AlbListener
      Priority: 1
  AlbTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: "/"
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      Name: handel-codepipeline-worker
      Port: 5000
      Protocol: HTTP
      UnhealthyThresholdCount: 2
      VpcId:
        Ref: VpcId
Outputs:
  AlbDns:
    Description: The DNS name of the ALB
    Value: !GetAtt Alb.DNSName
